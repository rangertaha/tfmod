{
	"swagger": "2.0",
	"info": {
	  "description": "{{.Description}}",
	  "version": "{{.Version}}",
	  "title": "{{.Title}}",
	  "contact": {},
	  "license": {}
	},
	"host": "{{.Host}}",
	"basePath": "{{.BasePath}}",
	"tags": [
	  {
		"name": "modules",
		"description": "Terrafrom modules",
		"externalDocs": {
		  "description": "Find out more",
		  "url": "https://www.terraform.io/docs/registry/api.html"
		}
	  }
	],
	"schemes": [
	  "https",
	  "http"
	],
	"paths": {
	  "/": {
		"get": {
		  "tags": [
			"modules"
		  ],
		  "summary": "List modules",
		  "description": "Returns modules",
		  "operationId": "getModules",
		  "produces": [
			"application/json"
		  ],
		  "parameters": [
			{
			  "name": "offset",
			  "in": "query",
			  "description": "Pagenation offset",
			  "required": false,
			  "type": "integer"
			},
			{
			  "name": "limit",
			  "in": "query",
			  "description": "Pagenation limit",
			  "required": false,
			  "type": "integer"
			},
			{
			  "name": "provider",
			  "in": "query",
			  "description": "Limits modules to a specific provider",
			  "required": false,
			  "type": "string"
			},
			{
			  "name": "verified",
			  "in": "query",
			  "description": "If true, limits results to only verified modules. Any other value including none returns all modules including verified ones.",
			  "required": false,
			  "type": "boolean"
			}
		  ],
		  "responses": {
			"200": {
			  "description": "successful operation"
			},
			"400": {
			  "description": "Invalid ID supplied"
			},
			"404": {
			  "description": "Modules not found"
			}
		  }
		}
	  },
	  "/search": {
		"get": {
		  "tags": [
			"modules"
		  ],
		  "summary": "Search for modules in a given namespace",
		  "description": "Returns modules in the namespace",
		  "operationId": "searchModules",
		  "produces": [
			"application/json"
		  ],
		  "parameters": [
			{
			  "name": "q",
			  "in": "query",
			  "description": "The search string. Search syntax understood depends on registry implementation. The public registry supports basic keyword or phrase searches.",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "offset",
			  "in": "query",
			  "description": "Pagenation offset",
			  "required": false,
			  "type": "integer"
			},
			{
			  "name": "limit",
			  "in": "query",
			  "description": "Pagenation limit",
			  "required": false,
			  "type": "integer"
			},
			{
			  "name": "provider",
			  "in": "query",
			  "description": "Limits modules to a specific provider",
			  "required": false,
			  "type": "string"
			},
			{
			  "name": "namespace",
			  "in": "query",
			  "description": "Limits results to a specific namespace",
			  "required": false,
			  "type": "string"
			},
			{
			  "name": "verified",
			  "in": "query",
			  "description": "If true, limits results to only verified modules. Any other value including none returns all modules including verified ones.",
			  "required": false,
			  "type": "boolean"
			}
		  ],
		  "responses": {
			"200": {
			  "description": "successful operation"
			},
			"400": {
			  "description": "Invalid ID supplied"
			},
			"404": {
			  "description": "Modules not found"
			}
		  }
		}
	  },
	  "/{namespace}": {
		"get": {
		  "tags": [
			"modules"
		  ],
		  "summary": "List modules in a given namespace",
		  "description": "Returns modules in the namespace",
		  "operationId": "getModulesByNamespace",
		  "produces": [
			"application/json"
		  ],
		  "parameters": [
			{
			  "name": "namespace",
			  "in": "path",
			  "description": "Namespace...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "offset",
			  "in": "query",
			  "description": "Pagenation offset",
			  "required": false,
			  "type": "integer"
			},
			{
			  "name": "limit",
			  "in": "query",
			  "description": "Pagenation limit",
			  "required": false,
			  "type": "integer"
			},
			{
			  "name": "provider",
			  "in": "query",
			  "description": "Limits modules to a specific provider",
			  "required": false,
			  "type": "string"
			},
			{
			  "name": "verified",
			  "in": "query",
			  "description": "If true, limits results to only verified modules. Any other value including none returns all modules including verified ones.",
			  "required": false,
			  "type": "boolean"
			}
		  ],
		  "responses": {
			"200": {
			  "description": "successful operation"
			},
			"400": {
			  "description": "Invalid ID supplied"
			},
			"404": {
			  "description": "Modules not found"
			}
		  }
		}
	  },
	  "/{namespace}/{name}/{provider}/versions": {
		"get": {
		  "tags": [
			"modules"
		  ],
		  "summary": "List modules in a given namespace",
		  "description": "Returns modules in the namespace",
		  "operationId": "getModuleByVersion",
		  "produces": [
			"application/json"
		  ],
		  "parameters": [
			{
			  "name": "provider",
			  "in": "path",
			  "description": "Provider...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "name",
			  "in": "path",
			  "description": "Module Name...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "namespace",
			  "in": "path",
			  "description": "Namespace...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "offset",
			  "in": "query",
			  "description": "Pagenation offset",
			  "required": false,
			  "type": "integer"
			},
			{
			  "name": "limit",
			  "in": "query",
			  "description": "Pagenation limit",
			  "required": false,
			  "type": "integer"
			},
			{
			  "name": "provider",
			  "in": "query",
			  "description": "Limits modules to a specific provider",
			  "required": false,
			  "type": "string"
			},
			{
			  "name": "verified",
			  "in": "query",
			  "description": "If true, limits results to only verified modules. Any other value including none returns all modules including verified ones.",
			  "required": false,
			  "type": "boolean"
			}
		  ],
		  "responses": {
			"200": {
			  "description": "successful operation"
			},
			"400": {
			  "description": "Invalid ID supplied"
			},
			"404": {
			  "description": "Modules not found"
			}
		  }
		}
	  },
	  "/{namespace}/{name}/{provider}/{verion}/download": {
		"get": {
		  "tags": [
			"modules"
		  ],
		  "summary": "Download Source Code for a Specific Module Version",
		  "description": "Downloads the specified version of a module for a single provider",
		  "operationId": "downloadModuleByProviderVersion",
		  "produces": [
			"application/json"
		  ],
		  "parameters": [
			{
			  "name": "provider",
			  "in": "path",
			  "description": "Provider...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "name",
			  "in": "path",
			  "description": "Module Name...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "namespace",
			  "in": "path",
			  "description": "Namespace...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "verion",
			  "in": "path",
			  "description": "The version of the module",
			  "required": true,
			  "type": "string"
			}
		  ],
		  "responses": {
			"200": {
			  "description": "successful operation"
			},
			"400": {
			  "description": "Invalid ID supplied"
			},
			"404": {
			  "description": "Modules not found"
			}
		  }
		}
	  },
	  "/{namespace}/{name}/{provider}": {
		"get": {
		  "tags": [
			"modules"
		  ],
		  "summary": "Latest Version for a Specific Module Provider",
		  "description": "Returns the latest version of a module for a single provider",
		  "operationId": "getLatestModuleByProvider",
		  "produces": [
			"application/json"
		  ],
		  "parameters": [
			{
			  "name": "namespace",
			  "in": "path",
			  "description": "Namespace...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "name",
			  "in": "path",
			  "description": "Module Name...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "provider",
			  "in": "path",
			  "description": "Provider...",
			  "required": true,
			  "type": "string"
			}
		  ],
		  "responses": {
			"200": {
			  "description": "successful operation"
			},
			"400": {
			  "description": "Invalid ID supplied"
			},
			"404": {
			  "description": "Modules not found"
			}
		  }
		}
	  },
	  "/{namespace}/{name}": {
		"get": {
		  "tags": [
			"modules"
		  ],
		  "summary": "List Latest Version of Modules for All Providers",
		  "description": "Returns the latest version of each provider for a module.",
		  "operationId": "getLatestModule",
		  "produces": [
			"application/json"
		  ],
		  "parameters": [
			{
			  "name": "namespace",
			  "in": "path",
			  "description": "Namespace...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "name",
			  "in": "path",
			  "description": "Module Name...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "offset",
			  "in": "query",
			  "description": "Pagenation offset",
			  "required": false,
			  "type": "integer"
			},
			{
			  "name": "limit",
			  "in": "query",
			  "description": "Pagenation limit",
			  "required": false,
			  "type": "integer"
			}
		  ],
		  "responses": {
			"200": {
			  "description": "successful operation"
			},
			"400": {
			  "description": "Invalid ID supplied"
			},
			"404": {
			  "description": "Modules not found"
			}
		  }
		}
	  },
	  "/{namespace}/{name}/{provider}/{version}": {
		"get": {
		  "tags": [
			"modules"
		  ],
		  "summary": "Get a Specific Module",
		  "description": "Returns the specified version of a module for a single provider",
		  "operationId": "geModuleByProviderVersion",
		  "produces": [
			"application/json"
		  ],
		  "parameters": [
			{
			  "name": "namespace",
			  "in": "path",
			  "description": "Namespace...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "name",
			  "in": "path",
			  "description": "Module Name...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "provider",
			  "in": "path",
			  "description": "Provider...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "version",
			  "in": "path",
			  "description": "Module version",
			  "required": true,
			  "type": "string"
			}
		  ],
		  "responses": {
			"200": {
			  "description": "successful operation"
			},
			"400": {
			  "description": "Invalid ID supplied"
			},
			"404": {
			  "description": "Modules not found"
			}
		  }
		}
	  },
	  "/{namespace}/{name}/{provider}/download": {
		"get": {
		  "tags": [
			"modules"
		  ],
		  "summary": "Download the Latest Version of a Module",
		  "description": "Downloads the latest version of a module for a single provider",
		  "operationId": "downloadLatestProviderModule",
		  "produces": [
			"application/json"
		  ],
		  "parameters": [
			{
			  "name": "namespace",
			  "in": "path",
			  "description": "Namespace...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "name",
			  "in": "path",
			  "description": "Module Name...",
			  "required": true,
			  "type": "string"
			},
			{
			  "name": "provider",
			  "in": "path",
			  "description": "Provider...",
			  "required": true,
			  "type": "string"
			}
		  ],
		  "responses": {
			"200": {
			  "description": "successful operation"
			},
			"400": {
			  "description": "Invalid ID supplied"
			},
			"404": {
			  "description": "Modules not found"
			}
		  }
		}
	  }
	},
	"definitions": {
	  "ErrorResponse": {
		"type": "object",
		"properties": {
		  "errors": {
			"type": "array",
			"items": {
			  "type": "string"
			}
		  }
		}
	  }
	},
	"externalDocs": {
	  "description": "Find out more about Swagger",
	  "url": "http://swagger.io"
	}
  }